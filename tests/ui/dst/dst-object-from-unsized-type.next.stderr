error[E0308]: mismatched types
  --> $DIR/dst-object-from-unsized-type.rs:11:23
   |
LL | fn test1<T: ?Sized + Foo>(t: &T) {
   |          - found this type parameter
LL |     let u: &dyn Foo = t;
   |            --------   ^ expected `&dyn Foo`, found `&T`
   |            |
   |            expected due to this
   |
   = note: expected reference `&dyn Foo`
              found reference `&T`
   = help: type parameters must be constrained to match other types
   = note: for more information, visit https://doc.rust-lang.org/book/ch10-02-traits.html#traits-as-parameters

error[E0605]: non-primitive cast: `&T` as `&dyn Foo`
  --> $DIR/dst-object-from-unsized-type.rs:16:23
   |
LL |     let v: &dyn Foo = t as &dyn Foo;
   |                       ^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error[E0308]: mismatched types
  --> $DIR/dst-object-from-unsized-type.rs:21:28
   |
LL |     let _: &[&dyn Foo] = &["hi"];
   |                            ^^^^ expected `&dyn Foo`, found `&str`
   |
   = note: expected reference `&dyn Foo`
              found reference `&'static str`
   = help: `str` implements `Foo` so you could box the found value and coerce it to the trait object `Box<dyn Foo>`, you will have to change the expected type as well

error[E0605]: non-primitive cast: `&[u8]` as `&dyn Foo`
  --> $DIR/dst-object-from-unsized-type.rs:26:23
   |
LL |     let _: &dyn Foo = x as &dyn Foo;
   |                       ^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object

error: aborting due to 4 previous errors

Some errors have detailed explanations: E0308, E0605.
For more information about an error, try `rustc --explain E0308`.
